{
    "version": 2,
    "name": "Epsilon W50",
    "inherits": "bcn3dprinter",
    "metadata": {
        "weight": "1",
        "file_formats": "text/x-gcode",
        "platform": "bcn3depsilon_bed.stl",
        "visible": true,
        "machine_extruder_trains": {
            "0": "bcn3dw50_extruder_left",
            "1": "bcn3dw50_extruder_right"
        },
        "supports_cloud_connection": true,
        "supports_firmware_updates": false
    },
    "overrides": {
        "acceleration_enabled": { "value": true },
        "acceleration_layer_0": { "value": "acceleration_topbottom" },
        "acceleration_print": { "value": "machine_acceleration" },
        "acceleration_support": { "value": "acceleration_wall_x" },
        "acceleration_support_interface": { "value": "acceleration_topbottom" },
        "acceleration_topbottom": { "value": "acceleration_wall_x" },
        "acceleration_travel": { "value": 800 },
        "acceleration_wall_0": { "value":  350 },
        "acceleration_wall_x": { "value": "round(acceleration_print - (acceleration_print - acceleration_wall_0)/ 2.)" },
        "adhesion_type": { "value": "'skirt'" },
        "avoid_grinding_filament": {
            "enabled": true,
            "value": false
        },
        "gantry_height": { "value": 12 },
        "clone_cool_fan": {
            "dual_value": "print_mode == 'dual' or print_mode == 'singleT0' or print_mode == 'singleT1' and extruderValue(0, 'cool_fan_enabled') and extruderValue(1, 'cool_fan_enabled')",
            "reset_on_used_extruders_change": true,
            "dual_enabled": true
        },
        "coasting_min_volume": { "value": "coasting_volume" },
        "cool_fan_enabled": { "value": true },
        "cool_fan_full_at_height": { "value": "0 if adhesion_type == 'raft' else layer_height_0 + 4 * layer_height" },
        "cool_min_layer_time": { "value": 5 },
        "cool_min_speed": { "value": 10 },
        "dual_pre_wipe": { "value": false },
        "fix_tool_change_travel": { "value": true },
        "gradual_support_infill_step_height": { "value": "max(5 * layer_height, 1)" },
        "infill_before_walls": { "value": false },
        "infill_line_width": { "value": "machine_nozzle_size" },
        "initial_layer_line_width_factor": { "value": 120 },
        "infill_overlap": { "value": 15 },
        "infill_wipe_dist": { "value": 0 },
        "infill_pattern": { "value": "'grid'" },
        "jerk_enabled": { "value": true },
        "jerk_layer_0": { "value": "jerk_topbottom" },
        "jerk_prime_tower": { "value": "jerk_wall" },
        "jerk_print": { "value": "machine_max_jerk_xy" },
        "jerk_support": { "value": "jerk_wall" },
        "jerk_support_interface": { "value": "jerk_topbottom" },
        "jerk_topbottom": { "value": "jerk_wall_x" },
        "jerk_travel": { "value": "jerk_print if magic_spiralize else machine_max_jerk_xy" },
        "jerk_wall": { "value": "jerk_print * 0.75" },
        "jerk_wall_0": { "value": "jerk_wall * 0.5" },
        "layer_height_0": {
            "value": "min(extruderValues('machine_nozzle_size')) / 2"
        },
        "layer_start_x": {
            "value": "machine_width/2"
        },
        "layer_start_y": {
            "value": "machine_depth"
        },
        "line_width": { "value": "machine_nozzle_size" },
        "machine_acceleration": { "default_value": 2500 },
        "material_bed_temperature": { "maximum_value": 120, "maximum_value_warning": 115 },
        "material_bed_temp_prepend": { "value": true },
        "material_bed_temp_wait": { "value": true },
        "machine_center_is_zero": { "default_value": false },
        "machine_depth": { "default_value":  300 },
        "machine_disallowed_areas": { "value": "[] if print_mode == 'dual' or print_mode == 'singleT0' or print_mode == 'singleT1' else [[[-(abs(machine_head_with_fans_polygon[0][0]) + abs(machine_head_with_fans_polygon[2][0])) / 2, machine_depth / 2], [-(abs(machine_head_with_fans_polygon[0][0]) + abs(machine_head_with_fans_polygon[2][0])) / 2, -machine_depth / 2], [machine_width / 2, -machine_depth / 2], [machine_width / 2, machine_depth / 2]]] if print_mode == 'mirror' else [[[0, machine_depth / 2], [0, -machine_depth / 2], [machine_width / 2, -machine_depth / 2], [machine_width / 2, machine_depth / 2]]]" },
        "machine_end_gcode": { "default_value": "M104 S0 T0               ;left extruder heater off\nM104 S0 T1               ;right extruder heater off\nM140 S0                  ;heated bed heater off\nM204 S{machine_acceleration} ;set default acceleration\nM205 X{machine_max_jerk_xy} Y{machine_max_jerk_xy} ;set default jerk\nG91                      ;relative positioning\nG1 Z+0.5 E-5 Y+10 F12000 ;move Z up a bit and retract filament\nG28 X0 Y0                ;move X/Y to min endstops so the head is out of the way\nM84                      ;steppers off\nG90                      ;absolute positioning\n" },
        "machine_heated_bed": { "default_value": true },
        "machine_heated_build_volume": { "value": true },
        "machine_height": { "default_value":  400 },
        "machine_max_feedrate_e": { "default_value": 1000 },
        "machine_max_feedrate_x": { "default_value": 200 },
        "machine_max_feedrate_y": { "default_value": 200 },
        "machine_max_feedrate_z": { "default_value": 12 },
        "machine_max_jerk_xy": { "value": 12.5 },
        "machine_name": { "default_value": "Epsilon W50" },
        "machine_nozzle_temp_enabled": { "value": true },
        "machine_prefix": { "default_value": "E" },
        "material_print_temp_prepend": { "value": true },
        "material_print_temp_wait": { "value": true },
        "machine_start_gcode": { "value": "';Machine Model: {machine_name} \\n;Materials used: {used_material, 0} {used_material, 1} \\n;Extruders used: {used_nozzle_size, 0} {used_nozzle_size, 1} \\nM141 S{build_volume_temperature} \\t;Set chamber temperature \\nM140 S{material_bed_temperature_layer_0} \\t;Heat build surface\\n' +           (\"M104 T1 \" + (\"S{material_print_temperature, 1}\" if extruderValue(1, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 1}\") + \"\\t;Heat extruder 1\\n\" +  'M190 S{material_bed_temperature_layer_0} \\t;Wait until bed temperature reached \\n' + \"M109 T1 \" + (\"S{material_print_temperature, 1}\" if extruderValue(1, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 1}\") +\"\\t;Heat extruder 1 and wait\\n\"  if  print_mode == \"singleT1\" else \"\")        +             (\"M104 T0 \" + (\"S{material_print_temperature, 0}\" if extruderValue(0, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 0}\") + \"\\t;Heat extruder 0\\n\" + 'M190 S{material_bed_temperature_layer_0} \\t;Wait until bed temperature reached \\n'+ \"M109 T0 \" + (\"S{material_print_temperature, 0}\" if extruderValue(0, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 0}\") +\"\\t;Heat extruder 0 and wait\\n\"  if  print_mode == \"singleT0\" else \"\")    +       (\"M104 T0 \" + (\"S{material_print_temperature, 0}\" if extruderValue(0, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 0}\") + \"\\t;Heat extruder 0\\n\" +  \"M104 T1 \" + (\"S{material_print_temperature, 1}\" if extruderValue(1, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 1}\") + \"\\t;Heat extruder 1\\n\" +   'M190 S{material_bed_temperature_layer_0} \\t;Wait until bed temperature reached \\n' + \"M109 T0 \" + (\"S{material_print_temperature, 0}\" if extruderValue(0, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 0}\") +\"\\t;Heat extruder 0 and wait\\n\" + \"M109 T1 \" + (\"S{material_print_temperature, 1}\" if extruderValue(1, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 1}\") +\"\\t;Heat extruder 1 and wait\\n\"  if  print_mode == \"dual\" else \"\")                                                                + (\"M104 T1 \" + (\"S{material_print_temperature, 1}\" if extruderValue(0, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 0}\") + \"\\t;Heat extruder 1\\n\" if  print_mode == \"mirror\" or print_mode == \"duplication\"else \"\")+ (\"M104 T0 \" + (\"S{material_print_temperature, 0}\" if extruderValue(0, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 0}\") +\"\\t;Heat extruder 0 \\n\" if  print_mode == \"mirror\" or print_mode == \"duplication\" else \"\") + ('M190 S{material_bed_temperature_layer_0} \\t;Wait until bed temperature reached \\n' if  print_mode == \"mirror\" or print_mode == \"duplication\" else \"\") + (\"M109 T1 \" + (\"S{material_print_temperature, 0}\" if extruderValue(0, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 0}\") +\"\\t;Heat extruder 1 and wait\\n\" if print_mode == \"mirror\" or print_mode == \"duplication\" else \"\") + (\"M109 T0 \" + (\"S{material_print_temperature, 0}\" if extruderValue(0, 'material_print_temperature_layer_0') == 0 else \"S{material_print_temperature_layer_0, 0}\") + \"\\t;Heat extruder 0 and wait\\n\" if  print_mode == \"mirror\" or print_mode == \"duplication\" else \"\") + 'G21 \\t\\t;metric values \\nG90 \\t\\t;absolute positioning \\nM204 S{machine_acceleration} \\t;set default acceleration \\nM205 X{machine_max_jerk_xy} Y{machine_max_jerk_xy} ;set default jerk \\nM107 \\t\\t;start with the fan off \\nG28 X0 Y0 \\t;move X/Y to min endstops \\nG28 Z0 \\t\\t;move Z to min endstops \\nG1 Z5 F200 \\t;safety Z axis movement\\n' + (\"{purge_in_bucket_before_start_gcode, 1}\\n{purge_in_bucket_before_start_gcode, 0}\\n\" if (adhesion_extruder_nr == 0) else \"{purge_in_bucket_before_start_gcode, 0}\\n{purge_in_bucket_before_start_gcode, 1}\\n\") + '{print_mode_gcode}\\nG4 P1\\nG4 P2\\nG4 P3\\n'" },
        "machine_width": { "default_value": 420 },
        "material_final_print_temperature": { "value": "material_print_temperature + -2.5 if material_flow_dependent_temperature else material_print_temperature" },
        "material_flow_dependent_temperature": {
            "enabled": true,
            "value": false
        },
        "material_initial_print_temperature": { "value": "material_print_temperature + 0 if material_flow_dependent_temperature else material_print_temperature" },
        "multiple_mesh_overlap": { "value": "0.375 * machine_nozzle_size - xy_offset" },
        "ooze_shield_enabled": { "value": false },
        "optimize_wall_printing_order": { "value": true },
        "purge_in_bucket": {
            "enabled": "print_mode == 'dual' or print_mode == 'singleT0' or print_mode == 'singleT1'",
            "value": true
        },
        "purge_speed": { "value": "round(max(40 * (machine_nozzle_size / material_diameter) ** 2, machine_nozzle_size * layer_height * speed_infill / (math.pi * ((material_diameter / 2) ** 2))), 2)" },
        "raft_airgap": { "value": "min(extruderValues('machine_nozzle_size')) * 0.55" },
        "raft_base_line_spacing": { "value": "extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * 7.5" },
        "raft_base_line_width": { "value": "extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * 2.5" },
        "raft_base_thickness": { "value": "extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * 0.75" },
        "raft_interface_line_width": { "value": "line_width * 1.5" },
        "raft_interface_thickness": { "value": "extruderValue(adhesion_extruder_nr, 'machine_nozzle_size') * 0.7" },
        "raft_margin": { "value": 3 },
        "retraction_amount_multiplier": { "value": 1 },
        "retract_at_layer_change": { "value": false },
        "retraction_combing": { "value": "'all'" },
        "retraction_count_max": { "value": 10 },
        "retraction_extrusion_window": { "value": 1 },
        "retraction_hop": { "value": "2 * layer_height" },
        "retraction_hop_enabled": { "value": true },
        "retraction_hop_height_after_extruder_switch": { "value": 5 },
        "retraction_hop_height_at_layer_change": { "value": "2 * layer_height" },
        "retraction_hop_only_when_collides": { "value": true },
        "retraction_min_travel": { "value": "3.75 * machine_nozzle_size" },
        "retraction_prime_speed": { "maximum_value_warning": "machine_max_feedrate_e" },
        "retraction_retract_speed": {
            "value": "min(retraction_speed, machine_max_feedrate_e)",
            "maximum_value_warning": "machine_max_feedrate_e"
        },
        "retraction_speed": {
            "maximum_value_warning": "45",
            "default_value": 30
        },
        "skin_angles": { "value": "[45, -45]" },
        "skirt_brim_minimal_length": { "value": 500 },
        "skirt_brim_speed": { "value": "speed_layer_0" },
        "skirt_line_count": {
            "enabled": false,
            "value": 1
        },
        "skin_overlap": { "value": 25 },
        "skin_preshrink": { "value": "expand_skins_expand_distance" },
        "speed_equalize_flow_max": { "value": 100 },
        "speed_support_interface": { "value": "speed_wall" },
        "speed_topbottom": { "value": "speed_wall_x" },
        "speed_travel": { "value":  200 },
        "speed_travel_layer_0": { "value": "round(speed_travel * speed_layer_0 / speed_print, 1)" },
        "speed_wall_0": { "value": "speed_wall" },
        "speed_wall_x": { "value": "round(speed_print - (speed_print - speed_wall) / 2, 1)" },
        "start_purge_distance": { "value": 10 },
        "support_angle": { "value": 60 },
        "support_bottom_distance": { "value": "layer_height" },
        "support_bottom_height": { "value": "3 * layer_height" },
        "support_conical_min_width": { "value": 10 },
        "support_infill_rate": { "value": 15 },
        "support_interface_density": { "value": 75 },
        "support_interface_enable": { "value": false },
        "support_interface_height": { "value": "5 * layer_height" },
        "support_interface_pattern": { "value": "'lines'" },
        "support_interface_skip_height": { "value": "layer_height" },
        "support_join_distance": { "value": 6 },
        "support_line_width": { "value": "infill_line_width" },
        "support_minimal_diameter": { "value": 3.0 },
        "support_offset": { "value": "machine_nozzle_size / 2" },
        "support_xy_distance": { "value": "machine_nozzle_size * 2" },
        "support_xy_distance_overhang": {
            "value":  0.5,
            "maximum_value_warning": "10"
        },
        "support_z_distance": { "value": "max(2 * layer_height, 0.15)" },
        "switch_extruder_prime_speed": { "maximum_value_warning": "machine_max_feedrate_e" },
        "switch_extruder_retraction_speed": { "value": "min(switch_extruder_retraction_speeds, machine_max_feedrate_e)" },
        "switch_extruder_retraction_speeds": { "maximum_value_warning": "machine_max_feedrate_e" },
        "top_bottom_pattern": { "value": "'zigzag'" },
        "travel_avoid_other_parts": { "value": false },
        "wall_0_inset": { "value": 0 },
        "wall_line_width": { "value": "line_width" },
        "wall_line_width_x": { "value": "line_width - 0.05" },
        "z_seam_x": { "value": "int(machine_width/2.) if print_mode == 'dual' or print_mode == 'singleT0' or print_mode == 'singleT1' else int((machine_width/2.)/2.) if print_mode == 'duplication' else int((machine_width/2. - 54/2)/2.)" },
        "z_seam_y": { "value": "machine_depth" }
    }
}